
## CODE REQUIREMENTS (PYTHON)
- Python Version: 3.13+
- Style: Idiomatic, simple, and clear.
- Type Safety: Fully type-annotated and `pyright --strict` compliant.
- Code Quality: `ruff format` and `ruff check` compliant. 
- Data Models: Avoid complex class hierarchies.  Use `dataclasses` or `pydantic.BaseModel` when needed.

## TECH STACK (PYTHON)
- APIs & CLIs: FastAPI and Typer
- HTTP Client: httpx for both sync and async requests.
- Logging: structlog for structured (JSON) logging, using the standard `logging` library as the backend.
- Configuration: TOML for config files. `pydantic-settings` where appropriate.
- Subprocesses: `subprocess.run()` with `check=True` and list-based arguments.
